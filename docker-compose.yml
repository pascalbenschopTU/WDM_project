version: "3"
services:
  rabbitmq:
    image: rabbitmq:latest
    restart: always
    hostname: rabbitmqhost
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

  
  # gateway:
  #   image: nginx:latest
  #   volumes:
  #     - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "8000:80"
  #   depends_on:
  #     - order-service
  #     - stock-service
  #     - payment-service

  # order-service:
  #   build: ./order
  #   #image: order:latest
  #   image: ghcr.io/leonkempen/wdm-order:latest
  #   command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --reload --timeout 10
  #   env_file:
  #     - env/order-mongodb.env
  #   environment:
  #     - GATEWAY_URL=http://gateway:80
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy

    # payment-service:
  #   build: ./payment
  #   image: ghcr.io/leonkempen/wdm-payment:latest
  #   command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
  #   env_file:
  #     - env/payment-mongodb.env
  #   environment:
  #     - GATEWAY_URL=http://gateway:80

  # stock-service:
  #   build: ./stock
  #   #image: stock:latest
  #   image: ghcr.io/leonkempen/wdm-stock:latest
  #   command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
  #   env_file:
  #     - env/stock-postgresql.env
  #   environment:
  #     - GATEWAY_URL=http://gateway:80
  #   restart: always
  #   depends_on:
  #     stock-db:
  #       condition: service_healthy

  # ## Order Router
  order-router01:
    image: mongo:6.0.1
    container_name: order_router-01
    command: mongos --port 27017 --configdb order_rs-config-server/order-configserver01:28119 --bind_ip_all #,order-configserver02:28120,order-configserver03:28121 --bind_ip_all
    ports:
      - 28017:27017
    restart: always
    volumes:
      - mongodb_cluster_order_router01_db:/data/db
      - mongodb_cluster_order_router01_config:/data/configdb

  ## Config Servers
  order-configserver01:
    image: mongo:6.0.1
    container_name: mongo-order-config-01
    command: mongod --port 27017 --configsvr --replSet order_rs-config-server
    volumes:
      - mongodb_cluster_order_configserver01_db:/data/db
      - mongodb_cluster_order_configserver01_config:/data/configdb
    ports:
      - 28119:27017
    restart: always
    links:
      - order-shard01-a

  order-shard01-a:
    image: mongo:6.0.1
    container_name: order_shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-order_shard-01
    volumes:
      - mongodb_cluster_order_shard01_a_db:/data/db
      - mongodb_cluster_order_shard01_a_config:/data/configdb
    ports:
      - 28122:27017
    restart: always
    links:
      - order-shard01-b
      - order-shard01-c

  order-shard01-b:
    image: mongo:6.0.1
    container_name: order_shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-order_shard-01
    volumes:
      - mongodb_cluster_order_shard01_b_db:/data/db
      - mongodb_cluster_order_shard01_b_config:/data/configdb
    ports:
      - 28123:27017
    restart: always

  order-shard01-c:
    image: mongo:6.0.1
    container_name: order_shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-order_shard-01
    volumes:
      - mongodb_cluster_order_shard01_c_db:/data/db
      - mongodb_cluster_order_shard01_c_config:/data/configdb
    ports:
      - 28124:27017
    restart: always


  payment-consumer:
    build: ./rabbitmq/consumers/payment
    image: ghcr.io/leonkempen/wdm-payment-consumer:latest
    command: python consumer.py
    env_file:
      - env/payment-mongodb.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/payment:/HOME/FLASK-APP

  stock-consumer:
    build: ./rabbitmq/consumers/stock
    image: stock-consumer
    command: python consumer.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/stock:/HOME/FLASK-APP

  ## Payment routers
  payment-router01:
    image: mongo:6.0.1
    container_name: payment_router-01
    command: mongos --port 27017 --configdb payment_rs-config-server/payment-configsvr01:27119 --bind_ip_all #,payment-configsvr02:27120,payment-configsvr03:27121 --bind_ip_all
    ports:
      - 29017:27017
    restart: always
    volumes:
      - payment_mongodb_cluster_router01_db:/data/db
      - payment_mongodb_cluster_router01_config:/data/configdb

  ## Payment config Servers
  payment-configsvr01:
    image: mongo:6.0.1
    container_name: payment_mongo-config-01
    command: mongod --port 27017 --configsvr --replSet payment_rs-config-server
    volumes:
      - payment_mongodb_cluster_configsvr01_db:/data/db
      - payment_mongodb_cluster_configsvr01_config:/data/configdb
    ports:
      - 27119:27017
    restart: always
    links:
      - payment-shard01-a

  payment-shard01-a:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - payment_mongodb_cluster_shard01_a_db:/data/db
      - payment_mongodb_cluster_shard01_a_config:/data/configdb
    ports:
      - 27122:27017
    restart: always
    links:
      - payment-shard01-b
      - payment-shard01-c

  payment-shard01-b:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - payment_mongodb_cluster_shard01_b_db:/data/db
      - payment_mongodb_cluster_shard01_b_config:/data/configdb
    ports:
      - 27123:27017
    restart: always

  payment-shard01-c:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - payment_mongodb_cluster_shard01_c_db:/data/db
      - payment_mongodb_cluster_shard01_c_config:/data/configdb
    ports:
      - 27124:27017
    restart: always

volumes:
  order_mongodb_data:
    driver: local
  payment_mongodb_data:
    driver: local
  # redis-cluster_data-0:
  #   driver: local
  # redis-cluster_data-1:
  #   driver: local
  # redis-cluster_data-2:
  #   driver: local
  # redis-cluster_data-3:
  #   driver: local
  # redis-cluster_data-4:
  #   driver: local
  # redis-cluster_data-5:
  #   driver: local

  mongodb_cluster_order_router01_db:
  mongodb_cluster_order_router01_config:

  mongodb_cluster_order_configserver01_db:
  mongodb_cluster_order_configserver01_config:

  mongodb_cluster_order_shard01_a_db:
  mongodb_cluster_order_shard01_a_config:

  mongodb_cluster_order_shard01_b_db:
  mongodb_cluster_order_shard01_b_config:

  mongodb_cluster_order_shard01_c_db:
  mongodb_cluster_order_shard01_c_config:

  payment_mongodb_cluster_router01_db:
  payment_mongodb_cluster_router01_config:

  payment_mongodb_cluster_configsvr01_db:
  payment_mongodb_cluster_configsvr01_config:


  payment_mongodb_cluster_shard01_a_db:
  payment_mongodb_cluster_shard01_a_config:

  payment_mongodb_cluster_shard01_b_db:
  payment_mongodb_cluster_shard01_b_config:

  payment_mongodb_cluster_shard01_c_db:
  payment_mongodb_cluster_shard01_c_config:
