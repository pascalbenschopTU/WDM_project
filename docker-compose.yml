version: "3"
services:
  rabbitmq:
    image: rabbitmq:latest
    restart: always
    hostname: rabbitmqhost
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build: ./order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --reload --timeout 10
    env_file:
      - env/order_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-mongodb:
        condition: service_started

  order-mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: order-mongodb
    command: mongod --auth
    ports:
      - 27018:27018
    volumes:
      - order_mongodb_data:/data/db
      - ./order/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    env_file:
      - env/order_mongodb_init.env

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
    env_file:
      - env/stock_postgresql.env
    environment:
      - GATEWAY_URL=http://gateway:80
    depends_on:
      stock-db:
        condition: service_healthy

  stock-db:
    image: postgres:latest
    restart: always
    env_file:
      - env/stock_postgresql.env
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./stock/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./stock/create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
      - ./stock/create_user.sql:/docker-entrypoint-initdb.d/create_user.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d stock -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  payment-service:
    build: ./payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
    env_file:
      - env/payment_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80
    # depends_on:
    #   payment-mongodb:
    #     condition: service_started

  # payment-mongodb:
  #   image: mongo:latest
  #   restart: unless-stopped
  #   container_name: payment-mongodb
  #   command: mongod --auth
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - payment_mongodb_data:/data/db
  #     - ./payment/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #   env_file:
  #     - env/payment_mongodb_init.env

  payment-consumer:
    build: ./rabbitmq/consumers/payment
    image: payment-consumer:latest
    command: python consumer.py
    env_file:
      - env/payment_mongodb.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/payment:/HOME/FLASK-APP

  stock-consumer:
    build: ./rabbitmq/consumers/stock
    image: stock-consumer:latest
    command: python consumer.py
    env_file:
      - env/stock_postgresql.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/stock:/HOME/FLASK-APP
  ## Router
  router01:
    image: mongo:6.0.1
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    ports:
      - 27017:27017
    restart: always
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_router01_db:/data/db
      - mongodb_cluster_router01_config:/data/configdb
  router02:
    image: mongo:6.0.1
    container_name: router-02
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_router02_db:/data/db
      - mongodb_cluster_router02_config:/data/configdb
    ports:
      - 27118:27017
    restart: always
    links:
      - router01

## Config Servers
  configsvr01:
    image: mongo:6.0.1
    container_name: mongo-config-01 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_configsvr01_db:/data/db
      - mongodb_cluster_configsvr01_config:/data/configdb
    ports:
      - 27119:27017
    restart: always
    links:
      - shard01-a
      - shard02-a
      - shard03-a
  configsvr02:
    image: mongo:6.0.1
    container_name: mongo-config-02 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_configsvr02_db:/data/db
      - mongodb_cluster_configsvr02_config:/data/configdb
    ports:
      - 27120:27017
    restart: always
    links:
      - configsvr01
  configsvr03:
    image: mongo:6.0.1
    container_name: mongo-config-03 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_configsvr03_db:/data/db
      - mongodb_cluster_configsvr03_config:/data/configdb
    ports:
      - 27121:27017
    restart: always
    links:
      - configsvr02

## Shards
  ## Shards 01
   
  shard01-a:
    image: mongo:6.0.1
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard01_a_db:/data/db
      - mongodb_cluster_shard01_a_config:/data/configdb
    ports:
      - 27122:27017
    restart: always
    links:
      - shard01-b
      - shard01-c
  shard01-b:
    image: mongo:6.0.1
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard01_b_db:/data/db
      - mongodb_cluster_shard01_b_config:/data/configdb
    ports:
      - 27123:27017
    restart: always
  shard01-c:
    image: mongo:6.0.1
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard01_c_db:/data/db
      - mongodb_cluster_shard01_c_config:/data/configdb
    ports:
      - 27124:27017
    restart: always

  ## Shards 02
  shard02-a:
    image: mongo:6.0.1
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard02_a_db:/data/db
      - mongodb_cluster_shard02_a_config:/data/configdb
    ports:
      - 27125:27017
    restart: always
    links:
      - shard02-b
      - shard02-c
  shard02-b:
    image: mongo:6.0.1
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard02_b_db:/data/db
      - mongodb_cluster_shard02_b_config:/data/configdb
    ports:
      - 27126:27017
    restart: always
  shard02-c:
    image: mongo:6.0.1
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard02_c_db:/data/db
      - mongodb_cluster_shard02_c_config:/data/configdb
    ports:
      - 27127:27017
    restart: always

  ## Shards 03
  shard03-a:
    image: mongo:6.0.1
    container_name: shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard03_a_db:/data/db
      - mongodb_cluster_shard03_a_config:/data/configdb
    ports:
      - 27128:27017
    restart: always
    links:
      - shard03-b
      - shard03-c
  shard03-b:
    image: mongo:6.0.1
    container_name: shard-03-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard03_b_db:/data/db
      - mongodb_cluster_shard03_b_config:/data/configdb
    ports:
      - 27129:27017
    restart: always
  shard03-c:
    image: mongo:6.0.1
    container_name: shard-03-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - mongodb_cluster_shard03_c_db:/data/db
      - mongodb_cluster_shard03_c_config:/data/configdb
    ports:
      - 27130:27017
    restart: always

volumes:
  order_mongodb_data:
    driver: local
  payment_mongodb_data:
    driver: local
  stock_postgres_data:
    driver: local
  mongodb_cluster_router01_db:
  mongodb_cluster_router01_config:
  
  mongodb_cluster_router02_db:
  mongodb_cluster_router02_config:
  
  mongodb_cluster_configsvr01_db:
  mongodb_cluster_configsvr01_config:
  
  mongodb_cluster_configsvr02_db:
  mongodb_cluster_configsvr02_config:
  
  mongodb_cluster_configsvr03_db:
  mongodb_cluster_configsvr03_config:
  
  mongodb_cluster_shard01_a_db:
  mongodb_cluster_shard01_a_config:
  
  mongodb_cluster_shard01_b_db:
  mongodb_cluster_shard01_b_config:
  
  mongodb_cluster_shard01_c_db:
  mongodb_cluster_shard01_c_config:
  
  mongodb_cluster_shard02_a_db:
  mongodb_cluster_shard02_a_config:
  
  mongodb_cluster_shard02_b_db:
  mongodb_cluster_shard02_b_config:
  
  mongodb_cluster_shard02_c_db:
  mongodb_cluster_shard02_c_config:
  
  mongodb_cluster_shard03_a_db:
  mongodb_cluster_shard03_a_config:
  
  mongodb_cluster_shard03_b_db:
  mongodb_cluster_shard03_b_config:
  
  mongodb_cluster_shard03_c_db:
  mongodb_cluster_shard03_c_config:
