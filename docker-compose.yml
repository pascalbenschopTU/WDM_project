version: "3"
services:
  rabbitmq:
    image: rabbitmq:latest
    restart: always
    hostname: rabbitmqhost
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5672:5672" 
      - "15672:15672"

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
        

  order-service:
    build: ./order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --reload --timeout 10
    env_file:
      - env/order_redis.env
      - env/order_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-mongodb:
        condition: service_started

  order-mongodb:
    image: mongo:latest
    restart: unless-stopped
    command: mongod --auth
    volumes:
      - order_mongodb_data:/data/db
    env_file:
      - env/order_mongodb.env

  # order-db:
  #   image: redis:latest
  #   command: redis-server --requirepass redis --maxmemory 512mb

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
    env_file:
      - env/stock_redis.env
      - env/stock_postgresql.env
    environment:
      - GATEWAY_URL=http://gateway:80

      
  stock-db:
    image: redis:latest
    command: redis-server --requirepass redis --maxmemory 512mb

  stock-postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - stock_postgres_data:/var/lib/postgresql/data
    env_file:
      - env/stock_postgresql.env

  payment-service:
    build: ./payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
    env_file:
      - env/payment_redis.env
      - env/payment_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80
    depends_on:
      payment-mongodb:
        condition: service_started

  payment-db:
    image: redis:latest
    command: redis-server --requirepass redis --maxmemory 512mb

  payment-mongodb:
    image: mongo:latest
    restart: unless-stopped
    command: mongod --auth
    volumes:
      - payment_mongodb_data:/data/db
    env_file:
      - env/payment_mongodb.env
  
  payment-consumer:
    build: ./rabbitmq/consumers/payment
    image: payment-consumer:latest
    command: python consumer.py
    env_file:
      - env/payment_redis.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/payment:/HOME/FLASK-APP
    
  stock-consumer:
    build: ./rabbitmq/consumers/stock
    image: stock-consumer:latest
    command: python consumer.py
    env_file:
      - env/stock_redis.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/stock:/HOME/FLASK-APP

volumes:
  order_mongodb_data:
    driver: local
  payment_mongodb_data:
    driver: local
  stock_postgres_data:
    driver: local
