version: "3"
services:
  rabbitmq:
    image: rabbitmq:3.11
    restart: always
    hostname: rabbitmqhost
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build: ./order
    image: order:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --reload --timeout 10
    env_file:
      - env/order_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-mongodb:
        condition: service_started

  order-mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: order-mongodb
    command: mongod --auth
    ports:
      - 27018:27018
    volumes:
      - order_mongodb_data:/data/db
      - ./order/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    env_file:
      - env/order_mongodb_init.env

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --reload --timeout 10
    environment:
      - GATEWAY_URL=http://gateway:80
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  stock-consumer:
    build: ./rabbitmq/consumers/stock
    image: stock-consumer:latest
    command: python consumer.py
    restart: always
    env_file:
      - env/stock_redis.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis-node-0:
        condition: service_healthy
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      redis-node-4:
        condition: service_healthy
      redis-node-5:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 5

  payment-service:
    build: ./payment
    image: payment:latest
    command: gunicorn -b 0.0.0.0:5000 app:app -w 1 --timeout 10
    env_file:
      - env/payment_mongodb.env
    environment:
      - GATEWAY_URL=http://gateway:80


  payment-consumer:
    build: ./rabbitmq/consumers/payment
    image: payment-consumer:latest
    command: python consumer.py
    env_file:
      - env/payment_mongodb.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./rabbitmq/consumers/payment:/HOME/FLASK-APP
  
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'ALLOW_EMPTY_PASSWORD=yes'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'ALLOW_EMPTY_PASSWORD=yes'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'ALLOW_EMPTY_PASSWORD=yes'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'ALLOW_EMPTY_PASSWORD=yes'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    # ports:
    #   - "6379:6379"
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      # - 'REDIS_PASSWORD=bitnami'
      # - 'REDISCLI_AUTH=bitnami'
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  ## Payment routers
  payment_router01:
    image: mongo:6.0.1
    container_name: payment_router-01
    command: mongos --port 27017 --configdb payment_rs-config-server/payment_configsvr01:27017,payment_configsvr02:27017,payment_configsvr03:27017 --bind_ip_all
    ports:
      - 27017:27017
    restart: always
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_router01_db:/data/db
      - payment_mongodb_cluster_router01_config:/data/configdb

  payment_router02:
    image: mongo:6.0.1
    container_name: payment_router-02
    command: mongos --port 27017 --configdb payment_rs-config-server/payment_configsvr01:27017,payment_configsvr02:27017,payment_configsvr03:27017 --bind_ip_all
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_router02_db:/data/db
      - payment_mongodb_cluster_router02_config:/data/configdb
    ports:
      - 27118:27017
    restart: always
    links:
      - payment_router01

  ## Payment config Servers
  payment_configsvr01:
    image: mongo:6.0.1
    container_name: payment_mongo-config-01
    command: mongod --port 27017 --configsvr --replSet  payment_rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_configsvr01_db:/data/db
      - payment_mongodb_cluster_configsvr01_config:/data/configdb
    ports:
      - 27119:27017
    restart: always
    links:
      - payment_shard01-a
      - payment_shard02-a
      - payment_shard03-a

  payment_configsvr02:
    image: mongo:6.0.1
    container_name: payment_mongo-config-02
    command: mongod --port 27017 --configsvr --replSet payment_rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_configsvr02_db:/data/db
      - payment_mongodb_cluster_configsvr02_config:/data/configdb
    ports:
      - 27120:27017
    restart: always
    links:
      - payment_configsvr01

  payment_configsvr03:
    image: mongo:6.0.1
    container_name: payment_mongo-config-03
    command: mongod --port 27017 --configsvr --replSet payment_rs-config-server
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_configsvr03_db:/data/db
      - payment_mongodb_cluster_configsvr03_config:/data/configdb
    ports:
      - 27121:27017
    restart: always
    links:
      - payment_configsvr02

  ## Payment shards

  ## Payment shard 01

  payment_shard01-a:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard01_a_db:/data/db
      - payment_mongodb_cluster_shard01_a_config:/data/configdb
    ports:
      - 27122:27017
    restart: always
    links:
      - payment_shard01-b
      - payment_shard01-c

  payment_shard01-b:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard01_b_db:/data/db
      - payment_mongodb_cluster_shard01_b_config:/data/configdb
    ports:
      - 27123:27017
    restart: always

  payment_shard01-c:
    image: mongo:6.0.1
    container_name: payment_shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-01
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard01_c_db:/data/db
      - payment_mongodb_cluster_shard01_c_config:/data/configdb
    ports:
      - 27124:27017
    restart: always

  ## Payment shard 02
  payment_shard02-a:
    image: mongo:6.0.1
    container_name: payment_shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard02_a_db:/data/db
      - payment_mongodb_cluster_shard02_a_config:/data/configdb
    ports:
      - 27125:27017
    restart: always
    links:
      - payment_shard02-b
      - payment_shard02-c

  payment_shard02-b:
    image: mongo:6.0.1
    container_name: payment_shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard02_b_db:/data/db
      - payment_mongodb_cluster_shard02_b_config:/data/configdb
    ports:
      - 27126:27017
    restart: always

  payment_shard02-c:
    image: mongo:6.0.1
    container_name: payment_shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-02
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard02_c_db:/data/db
      - payment_mongodb_cluster_shard02_c_config:/data/configdb
    ports:
      - 27127:27017
    restart: always

  ## Payment shard 03
  payment_shard03-a:
    image: mongo:6.0.1
    container_name: payment_shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard03_a_db:/data/db
      - payment_mongodb_cluster_shard03_a_config:/data/configdb
    ports:
      - 27128:27017
    restart: always
    links:
      - payment_shard03-b
      - payment_shard03-c

  payment_shard03-b:
    image: mongo:6.0.1
    container_name: payment_shard-03-node-b
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard03_b_db:/data/db
      - payment_mongodb_cluster_shard03_b_config:/data/configdb
    ports:
      - 27129:27017
    restart: always

  payment_shard03-c:
    image: mongo:6.0.1
    container_name: payment_shard-03-node-c
    command: mongod --port 27017 --shardsvr --replSet payment_rs-shard-03
    volumes:
      - ./payment/scripts:/payment/scripts
      - payment_mongodb_cluster_shard03_c_db:/data/db
      - payment_mongodb_cluster_shard03_c_config:/data/configdb
    ports:
      - 27130:27017
    restart: always

volumes:
  order_mongodb_data:
    driver: local
  payment_mongodb_data:
    driver: local
  stock_postgres_data:
    driver: local
  redis-cluster_data-0:
    driver: local
  redis-cluster_data-1:
    driver: local
  redis-cluster_data-2:
    driver: local
  redis-cluster_data-3:
    driver: local
  redis-cluster_data-4:
    driver: local
  redis-cluster_data-5:
    driver: local

  payment_mongodb_cluster_router01_db:
  payment_mongodb_cluster_router01_config:

  payment_mongodb_cluster_router02_db:
  payment_mongodb_cluster_router02_config:

  payment_mongodb_cluster_configsvr01_db:
  payment_mongodb_cluster_configsvr01_config:

  payment_mongodb_cluster_configsvr02_db:
  payment_mongodb_cluster_configsvr02_config:

  payment_mongodb_cluster_configsvr03_db:
  payment_mongodb_cluster_configsvr03_config:

  payment_mongodb_cluster_shard01_a_db:
  payment_mongodb_cluster_shard01_a_config:

  payment_mongodb_cluster_shard01_b_db:
  payment_mongodb_cluster_shard01_b_config:

  payment_mongodb_cluster_shard01_c_db:
  payment_mongodb_cluster_shard01_c_config:

  payment_mongodb_cluster_shard02_a_db:
  payment_mongodb_cluster_shard02_a_config:

  payment_mongodb_cluster_shard02_b_db:
  payment_mongodb_cluster_shard02_b_config:

  payment_mongodb_cluster_shard02_c_db:
  payment_mongodb_cluster_shard02_c_config:

  payment_mongodb_cluster_shard03_a_db:
  payment_mongodb_cluster_shard03_a_config:

  payment_mongodb_cluster_shard03_b_db:
  payment_mongodb_cluster_shard03_b_config:

  payment_mongodb_cluster_shard03_c_db:
  payment_mongodb_cluster_shard03_c_config:
